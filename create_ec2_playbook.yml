---
- name: create EC2 Instance
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Create Securtiy group
      ec2_group:
        name: "{{ security }}"
        description: "demo security group"
        access_key: "{{ access }}"
        secret_key: "{{ secret }}"
        region: "{{ region }}"
        rules:
          - proto: tcp # ssh
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp # http
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp # https
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: demo_firewall

    - name: Create an EC2 Instance
      ec2:
        key_name: "{{ pemkey }}"
        region: "{{ region  }}"
        access_key: "{{ access }}"
        secret_key: "{{ secret }}"
        group_id: "{{ demo_firewall.group_id }}"
        instance_type: "{{ type }}"
        image: "{{ ami }}"
        wait: yes
        instance_tags:
            Name: Web_Server
            env: "{{ tagname }}"
        count_tag: env
        exact_count: "{{ instance }}"
        vpc_subnet_id: "{{ subnet }}"
        assign_public_ip: yes
      register: ec2

    - name: wait for the servers to appear on the network 
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=180 state=started
      with_items: "{{ ec2.tagged_instances }}"
    
    - name: add server ip addresses to hosts group
      add_host: hostname={{ item.public_ip }} groupname=launched
      with_items: "{{ ec2.tagged_instances }}"

- name: webservers (installs apache and php ...)
  hosts: launched
  remote_user: ec2-user
  become: true
  become_method: sudo
  gather_facts: false
  roles:
    - web
    - php
    - database
